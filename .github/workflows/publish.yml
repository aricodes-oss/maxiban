name: Publish

on:
  push:
    branches: [main]

jobs:
  build:
    permissions:
      contents: write

    name: Build binaries
    strategy:
      matrix:
        architecture: [amd64, '386', arm64, arm]
        os: [linux, darwin, windows]

    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.build.outputs.executable }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build
        id: build
        run: |
          go build -o $exe
          echo "executable=$exe" >> "$GITHUB_OUTPUT"
        env:
          exe: maxiban-${{ matrix.os }}-${{ matrix.architecture }}
      - uses: wangyoucao577/go-release-action@v1
        if: ${{ !always() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          extra_files: LICENSE README.md
          binary_name: maxiban
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.architecture }}
      - uses: cloudposse/github-action-matrix-outputs-write@main
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.os }}
          outputs: |-
            - ${{ steps.build.outputs.executable }}

  read:
    name: Read
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: build

    outputs:
      result: '${{ steps.read.outputs.result }}'

  log:
    name: Log stuff
    runs-on: ubuntu-latest
    needs: [read]
    steps:
      - run: echo "${{ needs.reads.output.result }}"
